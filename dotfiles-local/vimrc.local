nnoremap <Leader>n :NERDTreeToggle<CR>
nnoremap <Leader>p :CtrlP<CR>
nnoremap <Leader>a :Ag!<Space>
set guifont=Menlo\ Regular:h14
hi Search guibg=peru guifg=wheat
set relativenumber
" colorscheme distinguished
au FocusLost * :wa
nnoremap <Leader>f :Ag  %<C-Left><Left>
set winwidth=84
set winheight=10
set winminheight=10
set winheight=999
vmap <Leader>b :<C-U>!git blame <C-R>=expand("%:p") <CR> \| sed -n <C-R>=line("'<") <CR>,<C-R>=line("'>") <CR>p <CR>
let g:rspec_command = 'call Send_to_Tmux("rspec {spec}\n")'
noremap <Leader>h :set hlsearch! hlsearch?<CR>
map <Leader>e <Plug>(easymotion-prefix)
set pastetoggle=<F6>
set clipboard=unnamed
nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>:retab<CR>
" move mark to gm for easyClip
nnoremap gm m
let g:trimmer_blacklist = ['markdown', 'make']
let g:jsx_ext_required = 0
" Set the type for the file type and override if file type
" " already has detected
au BufRead,BufNewFile *.ngt set syntax=html
" Ignore some folders and files for CtrlP indexing
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.yardoc\|node_modules\|log\|tmp$',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }
let g:ale_fixers = {}
let g:ale_linters = {}
let g:ale_linters['javascript'] = ['eslint']
let g:ale_fixers['javascript'] = ['prettier']
let g:ale_fixers['typescript'] = ['prettier']
let g:ale_fixers['elixir'] = ['mix_format']
let g:ale_linters['elixir'] = ['mix']
let g:ale_linters['typescript'] = ['tsserver', 'eslint']
" Set this setting in vimrc if you want to fix files automatically on save.
" This is off by default.
let g:ale_fix_on_save = 1

let g:ale_javascript_prettier_use_local_config = 1
nmap <silent> <Leader>l <Plug>(ale_next_wrap)
let g:airline_section_b = ""
" Start autocompletion after 4 chars
let g:ycm_min_num_of_chars_for_completion = 4
let g:ycm_min_num_identifier_candidate_chars = 4
let g:ycm_enable_diagnostic_highlighting = 0
" Don't show YCM's preview window [ I find it really annoying ]
set completeopt-=preview
let g:ycm_add_preview_to_completeopt = 0
nnoremap gD :YcmCompleter GoToDeclaration<CR>
nnoremap gF :YcmCompleter GoToDeclaration<CR>
" option+p
let g:AutoPairsShortcutToggle = 'Ï€'
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.php,*.jsx,*.tsx"



